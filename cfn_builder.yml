---
AWSTemplateFormatVersion: '2010-09-09'
Description: >
  This template deploys an i3.metal in a subnet that must be able to reach Internet
  The i3.metal instance then install VirtualBox and leverage packer for OS build
  At the end of the build, the OVA is uploaded to S3

#Metadata:
Parameters:
  VPC:
    Type: AWS::EC2::VPC::Id
  Subnet:
    Type: AWS::EC2::Subnet::Id
Resources:
  rInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-00035f41c82244dab
      InstanceType: i3.metal
      IamInstanceProfile: ec2-poweruser
      SecurityGroupIds:
        - !Ref rBuilderSG
      SubnetId: !Ref Subnet
      UserData: 
        'Fn::Base64': !Sub |
          #!/bin/bash
          # VARIABLES
          PACKER_URL="https://releases.hashicorp.com/packer/1.3.3/packer_1.3.3_linux_amd64.zip"
          GITHUB_REPO="https://github.com/j2clerck/amazon-metal-ami-builder.git"
          ISO_URL="s3://clerckj/packer-windows/iso/Win10_1803_English_x64.iso"
          PACKER_BUILD_FILE="windows_10.json"
          BUILD_NAME="Windows_10"
          BUILD_VERSION="20181212"
          EC2_AVAIL_ZONE=`curl -s http://169.254.169.254/latest/meta-data/placement/availability-zone`
          EC2_REGION="`echo \"$EC2_AVAIL_ZONE\" | sed 's/[a-z]$//'`"
          # SETUP ENVIRONMENT
          apt update
          apt -y install unzip awscli nvme-cli git virtualbox jq
          mkdir /opt/workdir/
          cd /opt/workdir
          wget $PACKER_URL
          unzip packer_1.3.3_linux_amd64.zip
          chmod +x packer
          mv packer /usr/bin/
          # DOWNLOAD PACKER BUILD CONFIGURATION
          git clone $GITHUB_REPO
          cd amazon-metal-ami-builder/packer/
          aws s3 cp $ISO_URL ./iso/
          if [ $? -ne 0 ]
          then
              echo "Unable to download iso"
              exit 1
          fi
          # LAUNCH BUILD
          packer build --only virtualbox-iso $PACKER_BUILD_FILE
          if [ $? -ne 0 ]
          then
              echo "Packer build failed"
              exit 1
          fi
          # UPLOAD OUTPUT TO S3
          aws s3 cp output-virtualbox-iso/*.ova s3://clerckj/vmimport/${!BUILD_NAME}_${!BUILD_VERSION}.ova
          if [ $? -ne 0 ]
          then
              echo "Upload to S3 failed"
              exit 1
          fi
          # LAUNCH VM IMPORT
          cat << EOF > disk.json
          [
            {
              "Description": "Windows10",
              "Format": "ova",
              "UserBucket": {
                "S3Bucket": "clerckj",
                "S3Key": "vmimport/${!BUILD_NAME}_${!BUILD_VERSION}.ova"
              }
            }
          ]
          EOF
          ImportTaskId=`aws ec2 import-image --architecture x86_64 --description "Import packer build of Windows10_20181212" --license-type BYOL --platform Windows --disk-containers file://disk.json --output json --region $EC2_REGION | jq .ImportTaskId`
          if [ $? -ne 0 ]
          then
              echo "Start import task failed"
              exit 1
          fi
          echo "Task id is ${!ImportTaskId}. Run aws ec2 describe-import-image-tasks --import-task-ids ${!ImportTaskId} --region ${!EC2_REGION}"
  rBuilderSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties: 
      GroupName: BuilderSG
      GroupDescription: BuilderSG with no inbound traffic
      VpcId: !Ref VPC 

